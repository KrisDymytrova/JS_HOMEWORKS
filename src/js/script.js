'use strict'

// Приклад 1

console.log(a)
var a = 10

// В цьому прикладі в консолі буде - undefined, тому що ми виводимо змінну a до її оголошення. Тобто в момент виклику console.log(a) змінна a ще не отримала значення.

// Приклад 2
myFunction()

function myFunction () {
  console.log('Hello, world!')
}

// В цьому прикладі в консолі буде - Hello, world!. Ми викликали функцію перед її оголошенням. Специфікація JavaScript передбачає підняття функцій, що означає, що оголошення функцій та змінних фактично розміщаються вгорі нашого коду, навіть якщо в дійсності цього не відбувається фізично.

// Приклад 3

console.log(b)
const b = 5

// В цьому прикладі в консолі буде - Uncaught ReferenceError: Cannot access 'b' before initialization, тому що ми намагаємося вивести значення змінної b перед її оголошенням. Змінні та константи, які оголошені за допомогою let та const, перебувають в TDZ, тому ми не можемо отримати доступ до них до моменту оголошення.

// Приклад 4

const myArrowFunction = () => {
  console.log('Hello from arrow function')
}

myArrowFunction()

// В цьому прикладі в консолі буде - 'Hello from arrow function'. Тут ми оголошуємо і викликаємо стрілкову функцію. Стрілкові функції також не піднімаються вгору області видимості.

// Приклад 5

const example1 = 'Успішне виконання коду'
console.log(example1)

// Приклад 6

console.log(example2)
const example2 = 5

// В цьому прикладі в консолі буде - Uncaught ReferenceError: Cannot access 'example2' before initialization, тому що ми намагаємося вивести значення змінної example2 перед її оголошенням. Змінні та константи, які оголошені за допомогою let та const, перебувають в TDZ, тому ми не можемо отримати доступ до них до моменту оголошення.
